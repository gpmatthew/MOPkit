// --------------------------------------------------
// Flexbox SASS mixins
// The spec: http://www.w3.org/TR/css3-flexbox
// --------------------------------------------------

// Flexbox display
@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
//@mixin flex($values) {
//  -webkit-box-flex: $values;
//  -moz-box-flex: $values;
//  -webkit-flex: $values;
//  -ms-flex: $values;
//  flex: $values;
//}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
  -webkit-flex-direction: $direction;
  -moz-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
  -moz-flex-wrap: $wrap;
  -ms-flex-wrap: $wrap;
  flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
  -moz-flex-flow: $flow;
  -ms-flex-flow: $flow;
  flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
  -webkit-flex-grow: $grow;
  -moz-flex-grow: $grow;
  -ms-flex-grow: $grow;
  flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
@mixin flex-shrink($shrink) {
  -webkit-flex-shrink: $shrink;
  -moz-flex-shrink: $shrink;
  -ms-flex-shrink: $shrink;
  flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
@mixin flex-basis($width) {
  -webkit-flex-basis: $width;
  -moz-flex-basis: $width;
  -ms-flex-basis: $width;
  flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | space-between | space-around
@mixin justify-content($justify) {
  -webkit-justify-content: $justify;
  -moz-justify-content: $justify;
  -ms-justify-content: $justify;
  justify-content: $justify;
  -ms-flex-pack: $justify;
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align) {
  -webkit-align-content: $align;
  -moz-align-content: $align;
  -ms-align-content: $align;
  align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
  -webkit-align-items: $align;
  -moz-align-items: $align;
  -ms-align-items: $align;
  -ms-flex-align: $align;
  align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align) {
  -webkit-align-self: $align;
  -moz-align-self: $align;
  -ms-align-self: $align;
  align-self: $align;
}

//************************************************************
//************    FLEX   ******************
//************************************************************

@mixin flex( $args... ) {

  @each $arg in $args {

    @if $arg == flex {
      display: $arg;
    }
    @if $arg == iflex {
      display: inline-flex !important;
    }
    @if $arg == flexi {
      display: flex !important;
    } @else if $arg == wrap or $arg == nowrap {
      flex-wrap: $arg;
    } @else if $arg == wrapi {
      flex-wrap: wrap !important;
    } @else if $arg == nowrapi {
      flex-wrap: nowrap !important;
    } @else if $arg == row or $arg == row_reverse or $arg == column or $arg == column_reverse {
      @if $arg == row_reverse {
        flex-direction: row-reverse;
      } @else if $arg == column_reverse {
        flex-direction: column-reverse;
      } @else {
        flex-direction: $arg;
      }
    } @else if $arg == ai_center or $arg == ai_start or $arg == ai_end or $arg == ai_stretch or $arg == ai_baseline or $arg == ai_auto {

      @if $arg == ai_center {
        align-items: center;
      } @else if $arg == ai_start {
        align-items: flex-start;
      } @else if $arg == ai_end {
        align-items: flex-end;
      } @else if $arg == ai_stretch {
        align-items: stretch;
      } @else if $arg == ai_baseline {
        align-items: baseline;
      } @else if $arg == ai_auto {
        align-items: auto;
      } @else {
        align-items: $args;
      }

    } @else if $arg == as_center or $arg == as_start or $arg == as_end or $arg == as_stretch or $arg == as_baseline or $arg == as_auto {
      @if $arg == as_center {
        align-self: center;
      } @else if $arg == as_start {
        align-self: flex-start;
      } @else if $arg == as_end {
        align-self: flex-end;
      } @else if $arg == as_stretch {
        align-self: stretch;
      } @else if $arg == as_baseline {
        align-self: baseline;
      } @else if $arg == as_auto {
        align-self: auto;
      } @else {
        align-self: $args;
      }
    } @else if $arg == jc_center or $arg == jc_start or $arg == jc_end or $arg == jc_space_around or $arg == jc_space_between {
      @if $arg == jc_center {
        justify-content: center;
      } @else if $arg == jc_start {
        justify-content: flex-start;
      } @else if $arg == jc_end {
        justify-content: flex-end;
      } @else if $arg == jc_space_around {
        justify-content: space-around;
      } @else if $arg == jc_space_between {
        justify-content: space-between;
      } @else {
        justify-content: $args;
      }
    } @else if $arg == f-aic {
      display: flex;
      align-items: center;
    } @else if $arg == f-jcc {
      display: flex;
      justify-content: center;
    } @else if $arg == f-aic-jcc {
      display: flex;
      align-items: center;
      justify-content: center;
    } @else {
      display: flex;
    }
  }
}
